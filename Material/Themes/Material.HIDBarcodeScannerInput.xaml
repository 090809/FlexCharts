<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:scannerIo="clr-namespace:Material.Controls.ScannerIO">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Material.Drawables.xaml"/>
		<ResourceDictionary Source="Material.DefinedBrushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	<Style TargetType="scannerIo:HIDBarcodeScannerInput">
		<Setter Property="Background" Value="{StaticResource mtGrey50}"/>
		<Setter Property="Foreground" Value="{StaticResource mtRedA400}"/>
		<Setter Property="FontSize" Value="20pt"/>
		<Setter Property="Padding" Value="8 4"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource mtGrey800}"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="scannerIo:HIDBarcodeScannerInput">
					<Grid MaxHeight="45" x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.500"
                                             From="1" To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="hoverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.500"
                                             From="0" To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="hoverBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{Binding Source={StaticResource mtGrey100}, Path=Color}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{Binding Source={StaticResource mtGrey600}, Path=Color}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.300"
                                             From="0" To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="focusBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.700"
                                             From="1" To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="focusBorder"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}"/>
							<ColumnDefinition />
							<ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}"/>
						</Grid.ColumnDefinitions>
						<!--<TextBox Name="textlabel" Grid.Column="1"  Text="{Binding Text}" Style="{StaticResource t14pButton}" 
										 Foreground="{TemplateBinding Foreground}" Visibility="Hidden" Padding="0"/>-->
						<!--<Label Name="formatdescriptionlabel" Grid.Column="1"  Content="{Binding InputValidator.FormatDescription}" 
										 Style="{StaticResource t14pButton}" Foreground="{StaticResource mtGrey600}"
										 FontWeight="Light" Padding="0"/>-->
						<Viewbox>
							<Path Style="{StaticResource drawablebarcode}" Fill="{StaticResource mtGrey800}"
											RenderTransformOrigin=".5,.5">
								<Path.RenderTransform>
									<ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
								</Path.RenderTransform>
							</Path>
						</Viewbox>
						<Viewbox Name="invalidicon" Grid.Column="2" Opacity="1" >
							<Path Style="{StaticResource drawablecancel}" Fill="{StaticResource mtRedA700}"
											RenderTransformOrigin=".5,.5">
								<Path.RenderTransform>
									<ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
								</Path.RenderTransform>
							</Path>
						</Viewbox>
						<Viewbox Name="validicon"  Grid.Column="2" Opacity="0">
							<Path Style="{StaticResource drawablecheck_circle}" Fill="{StaticResource mtGreenA700}"
											RenderTransformOrigin=".5,.5">
								<Path.RenderTransform>
									<ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
								</Path.RenderTransform>
							</Path>
						</Viewbox>
						<Grid Column="1">
							<Border x:Name="normalBorder" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"/>

							<Border x:Name="hoverBorder" Opacity="0"
                    BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{StaticResource mtBlueA400}" 
										Background="{StaticResource mtGrey50}"/>

							<Border x:Name="focusBorder" Opacity="0"
                    BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{StaticResource mtRedA700}" 
										Background="{StaticResource mtGrey50}"/>

							<ScrollViewer x:Name="PART_ContentHost"
                          Padding="{TemplateBinding Padding}"
                          BorderThickness="0" 
                          IsTabStop="False" 
                          Margin="2" 
                          Background="{x:Null}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          TextElement.Foreground="{TemplateBinding Foreground}"/>
						</Grid>


					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{StaticResource mtGrey700}"/>
						</Trigger>
						<Trigger Property="IsReadOnly" Value="True">
							<Setter Property="Foreground" Value="{StaticResource mtGrey800}"/>
						</Trigger>
						<!--<Trigger Property="HasCommand" Value="True">
							<Setter TargetName="formatdescriptionlabel" Property="Visibility" Value="Hidden"/>
							<Setter TargetName="textlabel" Property="Visibility" Value="Visible"/>
						</Trigger>-->
						<Trigger Property="IsInputValid" Value="PASSED">
							<Setter Property="BorderBrush" TargetName="focusBorder" Value="{StaticResource mtGreenA700}"/>
							<Setter Property="Foreground" Value="{StaticResource mtGreenA700}"/>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation To="0" Duration="0:0:0.15" Storyboard.TargetName="invalidicon"
																		 Storyboard.TargetProperty="Opacity">

										</DoubleAnimation>
										<DoubleAnimation To="1" BeginTime ="0:0:0.15"  Duration="0:0:0.3" Storyboard.TargetName="validicon"
																		 Storyboard.TargetProperty="Opacity">

										</DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="invalidicon"
																		 Storyboard.TargetProperty="Opacity">

										</DoubleAnimation>
										<DoubleAnimation To="0" BeginTime ="0:0:0.15"  Duration="0:0:0.3" Storyboard.TargetName="validicon"
																		 Storyboard.TargetProperty="Opacity">

										</DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>