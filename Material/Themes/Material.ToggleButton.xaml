<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Material.Converters"
                    xmlns:materialControls="clr-namespace:Material.Controls.Primitives">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Material.Drawables.xaml"/>
		<ResourceDictionary Source="Material.DefinedBrushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<converters:LuminosityToBrushConverter x:Key="l2bc"/>
	<!--Modified version of ButchersBoy's menu toggle theme from the material design toolkit-->
	<Style x:Key="MaterialMenuArrowToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}"/>
		<!--<Setter Property="Width" Value="37" />
    <Setter Property="Height" Value="37" />-->
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Property=Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="45"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.581"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="4.875"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.875"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-45"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.581"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="4.832"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-2.082"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.889"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="canvas">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-180"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle2">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle1">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="canvas">
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid ClipToBounds="True">
							<Grid>
								<Ellipse Name="clickWave" Width="{TemplateBinding ActualHeight}" 
													Height="{TemplateBinding ActualHeight}" 
													RenderTransformOrigin=".5,.5">
									<Ellipse.Fill>
										<MultiBinding Converter="{StaticResource l2bc}">
											<Binding Path="(materialControls:ThemePrimitive.Theme)"/>
											<Binding Path="(materialControls:VisualFeedback.ClickFeedback)"/>
										</MultiBinding>
									</Ellipse.Fill>
									<Ellipse.RenderTransform>
										<ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
									</Ellipse.RenderTransform>
								</Ellipse>
							</Grid>
							<Viewbox RenderTransformOrigin=".5,.5" Margin="10 8 10 8">
								<Viewbox.RenderTransform>
									<ScaleTransform x:Name="iconScale" ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Canvas x:Name="canvas" Width="24" Height="24" RenderTransformOrigin="0.5,0.5">
									<Canvas.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Canvas.RenderTransform>
									<Rectangle x:Name="rectangle" Fill="{TemplateBinding Foreground}" Height="2" Canvas.Left="3" RadiusY="0" RadiusX="0" Canvas.Top="6" Width="18" RenderTransformOrigin="0.5,0.5"
										   >
										<Rectangle.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</Rectangle.RenderTransform>
									</Rectangle>
									<Rectangle x:Name="rectangle1" Fill="{TemplateBinding Foreground}" Height="2" Canvas.Left="3" RadiusY="0" RadiusX="0" Canvas.Top="11" Width="18" RenderTransformOrigin="0.5,0.5"										   
										   >
										<Rectangle.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</Rectangle.RenderTransform>
									</Rectangle>
									<Rectangle x:Name="rectangle2" Fill="{TemplateBinding Foreground}" Height="2" Canvas.Left="3" RadiusY="0" RadiusX="0" Canvas.Top="16" Width="18" RenderTransformOrigin="0.5,0.5">
										<Rectangle.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</Rectangle.RenderTransform>
									</Rectangle>
								</Canvas>
							</Viewbox>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<!--<Setter Property="Effect" Value="{StaticResource MaterialDesignShadowDepth4}" TargetName="icon"/>-->
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="iconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="iconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1.15" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="iconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="iconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MaterialControllerCaseToggle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<!--<Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}"/>-->
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Property=Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation To="1" Storyboard.TargetName="controllericon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="0" Storyboard.TargetName="caseicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation To="0" Storyboard.TargetName="controllericon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="1" Storyboard.TargetName="caseicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid ClipToBounds="True">
							<Grid>
								<Ellipse Name="clickWave" Width="{TemplateBinding ActualHeight}" 
													Height="{TemplateBinding ActualHeight}" 
													RenderTransformOrigin=".5,.5">
									<Ellipse.Fill>
										<MultiBinding Converter="{StaticResource l2bc}">
											<Binding Path="(materialControls:ThemePrimitive.Theme)"/>
											<Binding Path="(materialControls:VisualFeedback.ClickFeedback)"/>
										</MultiBinding>
									</Ellipse.Fill>
									<Ellipse.RenderTransform>
										<ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
									</Ellipse.RenderTransform>
								</Ellipse>
							</Grid>
							<Viewbox Name="controllericon"  RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform x:Name="controllericonScale" ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablexbox_controller}"/>
							</Viewbox>
							<Viewbox Name="caseicon"  RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform x:Name="caseiconScale" ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablepackage_variant}"/>
							</Viewbox>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<!--<Setter Property="Effect" Value="{StaticResource MaterialDesignShadowDepth4}" TargetName="icon"/>-->
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="controllericonScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="controllericonScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="caseiconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="caseiconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1.15" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="controllericonScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="controllericonScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="caseiconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="caseiconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MaterialLockUnlockToggle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<!--<Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}"/>-->
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Property=Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation To="1" Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="0" Storyboard.TargetName="lockicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation To="0" Storyboard.TargetName="lockopenicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="1" Storyboard.TargetName="lockicon" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid ClipToBounds="True">
							<Grid>
								<Ellipse Name="clickWave" Width="{TemplateBinding ActualHeight}" 
													Height="{TemplateBinding ActualHeight}" 
													RenderTransformOrigin=".5,.5">
									<Ellipse.Fill>
										<MultiBinding Converter="{StaticResource l2bc}">
											<Binding Path="(materialControls:ThemePrimitive.Theme)"/>
											<Binding Path="(materialControls:VisualFeedback.ClickFeedback)"/>
										</MultiBinding>
									</Ellipse.Fill>
									<Ellipse.RenderTransform>
										<ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
									</Ellipse.RenderTransform>
								</Ellipse>
							</Grid>
							<Viewbox Name="lockopenicon"  RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform x:Name="lockopeniconScale" ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablelock_open}"/>
							</Viewbox>
							<Viewbox Name="lockicon"  RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform x:Name="lockiconScale" ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablelock}"/>
							</Viewbox>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<!--<Setter Property="Effect" Value="{StaticResource MaterialDesignShadowDepth4}" TargetName="icon"/>-->
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="lockopeniconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockopeniconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockiconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockiconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1.15" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="lockopeniconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockopeniconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockiconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="lockiconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MaterialNightDayToggle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<!--<Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}"/>-->
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Property=Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation To="1" Storyboard.TargetName="day" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="0" Storyboard.TargetName="night" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation To="0" Storyboard.TargetName="day" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
										<DoubleAnimation To="1" Storyboard.TargetName="night" Storyboard.TargetProperty="Opacity" Duration="0:0:.15"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid ClipToBounds="True">
							<Grid>
								<Ellipse Name="clickWave" Width="{TemplateBinding ActualHeight}" 
													Height="{TemplateBinding ActualHeight}" 
													RenderTransformOrigin=".5,.5">
									<Ellipse.Fill>
										<MultiBinding Converter="{StaticResource l2bc}">
											<Binding Path="(materialControls:ThemePrimitive.Theme)"/>
											<Binding Path="(materialControls:VisualFeedback.ClickFeedback)"/>
										</MultiBinding>
									</Ellipse.Fill>
									<Ellipse.RenderTransform>
										<ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
									</Ellipse.RenderTransform>
								</Ellipse>
							</Grid>
							<Viewbox Name="day"  RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform x:Name="dayScale" ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablebrightness_3}"/>
							</Viewbox>
							<Viewbox Name="night"  RenderTransformOrigin=".5,.5">
								<Viewbox.RenderTransform>
									<ScaleTransform x:Name="nightScale" ScaleX="1" ScaleY="1"/>
								</Viewbox.RenderTransform>
								<Path Style="{StaticResource drawablebrightness_5}"/>
							</Viewbox>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<!--<Setter Property="Effect" Value="{StaticResource MaterialDesignShadowDepth4}" TargetName="icon"/>-->
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="dayScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="dayScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="nightScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="nightScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1.15" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="dayScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="dayScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="nightScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1" Duration="0:0:.15" />

										<DoubleAnimation Storyboard.TargetName="nightScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1" Duration="0:0:.15" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<EventTrigger RoutedEvent="Click">
							<EventTrigger.Actions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

										<DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>